{
  "id": "H-1-X9bkop8",
  "title": "2. Bentley Rules for Optimizing Work",
  "description": "MIT 6.172 Performance Engineering of Software Systems, Fall 2018\nInstructor: Julian Shun\nView the complete course: https://ocw.mit.edu/6-172F18\nYouTube Playlist: https://www.youtube.com/playlist?list=PLUl4u3cNGP63VIBQVWguXxZZi0566y7Wf\n\nProf. Shun discusses Bentley Rules for optimizing work and discusses a number of examples including packing and encoding, compile-time initialization, loop unrolling, short-circuiting, fast paths, and combining tests.\n\nLicense: Creative Commons BY-NC-SA\nMore information at https://ocw.mit.edu/terms\nMore courses at https://ocw.mit.edu",
  "uploader": "MIT OpenCourseWare",
  "upload_date": "20190923",
  "duration": 4810,
  "view_count": 78191,
  "tags": [
    "Bentley optimization rules",
    "data structures",
    "inlining",
    "fast path",
    "precomputation",
    "econding",
    "loops"
  ],
  "webpage_url": "https://www.youtube.com/watch?v=H-1-X9bkop8",
  "thumbnail": "https://i.ytimg.com/vi_webp/H-1-X9bkop8/maxresdefault.webp",
  "chapters": [
    {
      "start_time": 0.0,
      "title": "Intro",
      "end_time": 66.0
    },
    {
      "start_time": 66.0,
      "title": "Optimizing Work",
      "end_time": 170.0
    },
    {
      "start_time": 170.0,
      "title": "Jon Louis Bentley",
      "end_time": 198.0
    },
    {
      "start_time": 198.0,
      "title": "New \"Bentley\" Rules",
      "end_time": 272.0
    },
    {
      "start_time": 272.0,
      "title": "New Bentley Rules",
      "end_time": 494.0
    },
    {
      "start_time": 494.0,
      "title": "Packing and Encoding (2)",
      "end_time": 653.0
    },
    {
      "start_time": 653.0,
      "title": "Augmentation",
      "end_time": 772.0
    },
    {
      "start_time": 772.0,
      "title": "Precomputation",
      "end_time": 885.0
    },
    {
      "start_time": 885.0,
      "title": "Pascal's Triangle",
      "end_time": 1010.0
    },
    {
      "start_time": 1010.0,
      "title": "Precomputing Pascal",
      "end_time": 1264.0
    },
    {
      "start_time": 1264.0,
      "title": "Compile-Time Initialization (2)",
      "end_time": 1412.0
    },
    {
      "start_time": 1412.0,
      "title": "Caching",
      "end_time": 1700.0
    },
    {
      "start_time": 1700.0,
      "title": "Sparsity (2)",
      "end_time": 2146.0
    },
    {
      "start_time": 2146.0,
      "title": "Sparsity (4)",
      "end_time": 2406.0
    },
    {
      "start_time": 2406.0,
      "title": "Constant Folding and Propagation",
      "end_time": 2520.0
    },
    {
      "start_time": 2520.0,
      "title": "Common-Subexpression Elimination",
      "end_time": 2779.0
    },
    {
      "start_time": 2779.0,
      "title": "Algebraic Identities",
      "end_time": 2886.0
    },
    {
      "start_time": 2886.0,
      "title": "Short-Circuiting",
      "end_time": 3295.0
    },
    {
      "start_time": 3295.0,
      "title": "Creating a Fast Path",
      "end_time": 3458.0
    },
    {
      "start_time": 3458.0,
      "title": "Combining Tests",
      "end_time": 4810
    }
  ],
  "transcript_file": "/Users/piotrgidzinski/KeatsSearch_workspace/keats-search/data/transcripts/6.172/H-1-X9bkop8.en-j3PyPqV-e1s.srt"
}